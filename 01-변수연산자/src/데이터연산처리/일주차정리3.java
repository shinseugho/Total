package 데이터연산처리;

/*
 *      데이터 처리에 연산자가 필요하다.
 *      
 *      단항연산자 
 *                증감연산자 ( ++, -- )       int a = 10; int b = a++; a = 11. b = 10  
 *                부정연산자 ( ! )              조건문 (if, while, for) 에서 자주 사용된다. ( true / false로 결과값이 나온다. )
 *                타입연산자 ( 데이터형 )         형변환에 사용      (int)10.5 
 *                
 *      이항연산자           
 *                산술연산자 ( +, -, *, /, % )  /는 0으로 나눌 수 없고, 정/정수 시 정수로 나타난다. %는 왼쪽의 부호를 따라간다.    
 *                비교연산자 ( ==, !=, <, >, <=, >= ) => true/false로 결과값이 나온다.
 *                논리연산자 ( &&, || ) 두 개의 조건을 가지고 연산처리히며. true/false로 결과값이 나온다.
 *                * 효율적인 연산 (false) $$ ( ) 시 무조건 false
 *                *           (true)  || ( ) 시 무조건 true
 *                대입연산자 ( +=, -= )
 *      
 *      삼항연산자  (조건 ) ? 값1 : 값2 ;         조건이 true면 값1을 불러오고 false면 값2를 불러온다.             
 *                
 *      변수     알파벳  
 *      연산자   단어
 *      제어문   단어,문장,문법 등 활용
 *      메소드   독해 
 *      클래스   회화
 *      
 *      메소드와 함수차이 ? 면접에서 물어볼 수있다. (기술면접) 클래스에 종속되면 메소드, 독립적이면 함수이다.
 *             
 */

public class 일주차정리3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
